{{- $name := include "app.projectName" . -}}
{{- $domain := required "Domain name is required" .Values.project.domain -}}
{{- $clusterIssuer := required "A cluster issuer is required" .Values.ingress.clusterIssuer -}}
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ $name }}
  namespace: {{ .Release.Namespace }}
  labels: {{ include "app.labels" . | nindent 4 }}
  annotations:
    kubernetes.io/ingress.class: nginx

    cert-manager.io/cluster-issuer: {{ $clusterIssuer }}

    nginx.ingress.kubernetes.io/proxy-body-size: {{ .Values.ingress.maxBodySize }}

    {{- if .Values.ingress.forceWww }}
    
    nginx.ingress.kubernetes.io/from-to-www-redirect: 'true'
    {{- end }}

    {{- if .Values.ingress.basicAuth.secret }}
    
    # Type of authentication
    nginx.ingress.kubernetes.io/auth-type: basic
    # Name of the secret that contains the user/password definitions
    nginx.ingress.kubernetes.io/auth-secret: {{ .Values.ingress.basicAuth.secret }}
    # Message to display with an appropriate context why the authentication is required
    nginx.ingress.kubernetes.io/auth-realm: {{ .Values.ingress.basicAuth.realm }}
    {{- end }}
spec:
  tls:
  - hosts:
    - {{ $domain }}
    {{- if .Values.ingress.forceWww }}
    - {{ printf "www.%s" $domain }}
    {{- end }}
    secretName: {{ printf "%s-cert" $name }}
  rules:
  {{ if .Values.ingress.forceWww -}}
  - host: {{ printf "www.%s" $domain }}
  {{- else -}}
    - host: {{ $domain }}
  {{- end }}
    http:
      paths:
      - backend:
          service:
            name: {{ $name }}
            port:
              number: 80
        pathType: ImplementationSpecific
...
