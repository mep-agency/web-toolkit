name: GitHub Container Registry cleanup

on:
  workflow_dispatch:
  schedule:
    - cron: '0 3 * * *'

jobs:
  ghcr-cleanup:
    runs-on: ubuntu-latest
    steps:
      - name: Setup repository name
        run: echo "MWT_REPOSITORY_NAME=${GITHUB_REPOSITORY#*/}" >> $GITHUB_ENV

      # The following step needs an access token with permission to delete packages
      - name: Untagged versions cleanup
        uses: actions/github-script@v3
        timeout-minutes: 5
        with:
          github-token: ${{ secrets.GH_PRIVATE_TOKEN }}
          script: |
            const response = await github.request('GET /${{ env.OWNER }}/packages/container/${{ env.PACKAGE_NAME }}/versions',
              { per_page: ${{ env.PER_PAGE }}
            });
            for (version of response.data) {
                if (version.metadata.container.tags.length == 0) {
                    console.log('Deleting untagged version: ' + version.id);
                    const deleteResponse = await github.request('DELETE /${{ env.OWNER }}/packages/container/${{ env.PACKAGE_NAME }}/versions/' + version.id, { });
                    console.log('Status: ' + deleteResponse.status);
                } else {
                  console.log('Skipping tagged version: ' + version.metadata.container.tags[0] + ' (' + version.id + ')');
                }
            }
        env:
          OWNER: orgs/${{ github.repository_owner }} # "user" or "orgs/<org name>"
          PACKAGE_NAME: ${{ env.MWT_REPOSITORY_NAME }}
          PER_PAGE: 100
